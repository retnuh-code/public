#!/bin/bash

# Color Codes
YW=$(echo "\033[33m")
BL=$(echo "\033[36m")
RD=$(echo "\033[01;31m")
BGN=$(echo "\033[4;92m")
GN=$(echo "\033[1;92m")
DGN=$(echo "\033[32m")
CL=$(echo "\033[m")
CM="${GN}âœ“${CL}"
CROSS="${RD}âœ—${CL}"
BFR="\\r\\033[K"
HOLD=" "

# Enable strict error handling
catch_errors() {
    set -Eeuo pipefail
    trap 'error_handler $LINENO "$BASH_COMMAND"' ERR
}

# Error handler function
error_handler() {
    local exit_code="$?"
    local line_number="$1"
    local command="$2"
    echo -e "\n${RD}[ERROR]${CL} in line ${RD}$line_number${CL}: exit code ${RD}$exit_code${CL}: while executing command ${YW}$command${CL}\n"
    exit 1
}

# Display an informational message
msg_info() {
    local msg="$1"
    echo -ne " ${HOLD} ${YW}${msg}..."
    spinner &
    SPINNER_PID=$!
}

# Display success message
msg_ok() {
    [[ -n "${SPINNER_PID:-}" ]] && kill $SPINNER_PID > /dev/null 2>&1
    printf "\e[?25h"
    local msg="$1"
    echo -e "${BFR} ${CM} ${GN}${msg}${CL}"
}

# Display error message
msg_error() {
    [[ -n "${SPINNER_PID:-}" ]] && kill $SPINNER_PID > /dev/null 2>&1
    printf "\e[?25h"
    local msg="$1"
    echo -e "${BFR} ${CROSS} ${RD}${msg}${CL}"
}

# Spinner function for long processes
spinner() {
    local chars="/-\|"
    local spin_i=0
    printf "\e[?25l"
    while true; do
        printf "\r \e[36m%s\e[0m" "${chars:spin_i++%${#chars}:1}"
        sleep 0.1
    done
}

# Ensure script is run as root
root_check() {
    if [[ "$(id -u)" -ne 0 ]]; then
        msg_error "Please run this script as root."
        exit 1
    fi
}

# Ensure shell is bash
shell_check() {
    if [[ "$(basename "$SHELL")" != "bash" ]]; then
        msg_error "Your default shell is not bash. Please switch to bash to run this script."
        exit 1
    fi
}

# Check Proxmox VE version
pve_check() {
    if ! pveversion | grep -Eq "pve-manager/8.[1-3]"; then
        msg_error "This version of Proxmox Virtual Environment is not supported. Requires PVE Version 8.1 or later."
        exit 1
    fi
}

# Select Proxmox Storage
select_storage() {
    local storage_list=($(pvesm status -content rootdir | awk 'NR>1 {print $1}'))
    local storage_menu=()
    for storage in "${storage_list[@]}"; do
        storage_menu+=("$storage" "")
    done
    dialog --clear --title "Select Storage" --menu "Choose the storage for the LXC container:" 15 50 4 "${storage_menu[@]}" 2>&1 >/dev/tty
}
